# -*- encoding : utf-8 -*-
class Fill < ActiveRecord::Migration
  def self.up
    test_data_pattern = [
        {:title => 'Вышел JetBrains RubyMine 3.0', :text => 'Вышло обновление популярного IDE для Ruby on Rails — RubyMine 3.0. В новой версии стоит отметить следующие вещи: 1) Поддержка rails 3.0 2) Большие изменения в поддержке SASS, LESS, HAML 3) Поддержка интеграции с Mercurial "из коробки" 4) Интеграция с баг-трекерами (Redmine, Jira, Lighthouse, Github, PivotalTracker) Персональная лицензия обойдется в €61 обновление с предыдущей версии €44. Для opensource проектов есть возможность получения бесплатной лицензии.'},
        {:title => ' Знакомство с Ruby on Rails 3.0', :text =>'Что такое и с чем едят – для использования в будущем при разработке своих проектов. Так как знаний по данной теме не было вообще, то и двигаться решили постепенно. При начальной установке Ruby с Rails 3.0 мы столкнулись с некоторыми трудностями, о которых в мануалах так сходу никто не упоминал. Поэтому я решил написать это небольшое руководство (которое является обобщением собственного опыта и перевода мануала на guides.rubyonrails.org/getting_started.html) по изначальной установке и настройке Ruby on Rails 3.0 для того, чтобы помочь таким же начинающим как я найти полезную информацию в одном месте и сэкономить свое время. Манипуляции проводились на системе Windows XP SP2. На Windows 7 все то же самое, а на Висте рельсы у меня не поставились, но об этом позже. Итак, для начала надо скачать Ruby installer. Инсталляция там нетрудная и все ясно (только сразу обновите переменную PATH, как это предлагается сделать).'},
        {:title => 'На этой неделе выйдет Ruby on Rails 3.0', :text =>'До конца этой недели ожидается значительное обновление популярной открытой среды и одноименного фреймворка для веб-разработок. Лидер разработки Ruby on Rails Дэвид Хайнемеер Ханссон, в своем блоге подтвердил, что третья версия среды выйдет до конца недели. Ruby on Rails представляет собой программный каркас, написанный на языке программирования Ruby. Ruby on Rails предоставляет архитектурный образец Model-View-Controller (модель-представление-контроллер) для веб-приложений, а также обеспечивает их интеграцию с веб-сервером и сервером базы данных. Данная система предоставляет однородную среду для разработки динамических AJAX-интерфейсов, с обработкой запросов и выдачи данных в контроллерах, отражения предметной области в базе данных. Ruby on Rails является открытым программным обеспечением и распространяется под лицензией MIT. Ruby on Rails 3.0 сможет работать с Apache, Lighttpd или любым другим веб-сервером, поддерживающим FastCGI. Для разработки и отладки здесь будет использоваться встроенный в Ruby веб-сервер WEBrick или Mongrel. С помощью плагина в Rails реализована поддержка сетевого протокола WebDAV. В качестве сервера базы данных здесь поддерживаются MySQL, Firebird, PostgreSQL, IBM DB2, Oracle и Microsoft SQL Server. Также поддерживается встраиваемая база данных SQLite. Для Windows существует дистрибутив Instant Rails c настроенной и готовой к работе сразу после установки рабочей средой для разработки Rails-приложений, которая включает в себя сервер Apache и СУБД MySQL. Для платформ Windows, Linux, Mac OS X имеется комплексный установщик BitNami RubyStack, включающий в себя все необходимое для разработки в среде Rails, включая Ruby, RubyGems, Ruby on Rails, MySQL, Apache, Mongrel и Subversion. Третья версия Rails работает со значительно обновленным фреймворком Merb, обладающим повышенной производительностью. Также здесь реализованы механизмы защиты от кросс-скриптинговых атак, встроенные помощники JavaScript, роутер, базирующийся на REStful и возможность полной записи кодов, исполняющихся в системе. Первый релиз-кандидат этой платформы был представлен в конце июня текущего года.'},
        {:title => 'Генерация RSS из постов на Tumblr dashboard', :text =>'Всем привет, Хочу поделиться библиотекой tumblr-dashboard-rss и простым приложением на Sinatra для генерации RSS из постов на вашем Tumblr dashboard. Tumblr не отдает RSS поток с постами, которые показываются на Tumblr dashboard, но отдает эту информацию по API. Есть несколько решений, которые делают желаемое. Некоторые из них не показывают кода, некоторые требуют сервер, чтобы их запустить. Если вы такой же параноик как я, то можете воспользоваться моим кодом и развернуть его на бесплатном Heroku. регистрируетесь на api.heroku.com/signup git clone git://github.com/timurvafin/tumblr-dashboard-rss-sinatra-app.git cd tumblr-dashboard-rss-sinatra-app/ rvm gemset create tumblr-dashboard-rss-sinatra-app  gem install bundle bundle install heroku create --stack bamboo-mri-1.9.2 Вы получили работающую версию приложения. Если вы параноик чуть меньше, то можете воспользоваться моей версией на Heroku. Чтобы получить RSS поток, необходимо сформироваться URL вида tumblr-dashboard.heroku.com/email/password, где email, password — email и пароль от вашего Tumblr.'},
        {:title => 'Обновление спутниковых снимков на Картах Google ', :text =>'Борис Хвостиченко, менеджер по продуктам Google в России Мы получаем много вопросов о том, как обновляются спутниковые снимки на Картах Google. Сегодня мы хотели бы рассказать об этом поподробнее. У нас есть единая база спутниковых изображений для всего мира, и существует регулярный процесс их обновления. Мы постоянно получаем новые снимки от наших поставщиков, проверяем их качество (отсутствие облаков, цвет, яркость и четкость снимка) и каждые две недели выкладываем обновления в нашу базу. Сразу после этого новые снимки появляются в Google Earth, а через несколько недель — на Картах Google.'},
        {:title => '1млн рублей за хостинг 96 сайтов МЧС на 2011год', :text =>'Интересная закупка нашлась «Оказание услуг по осуществлению хостинга инернет — сайтов, входящих в официальный Интернет — портал МЧС России» За 1 млн рублей предлагается разместить 5 серверов с 96 сайтами МЧС. Выдержки из технического задания: 3. В рамках данной задачи Исполнитель предоставляет Заказчику серверы, обеспечивает их настройку и администрирование. 6. В целях безопасности исполнитель обязан предоставить в аренду коммутатор Cisco (или эквивалент). 7.Для организации площадки требуется предоставить Заказчику не менее 5 выделенных серверов: 2 master, 2 slave, синхронизирующихся с master, 1 FTP-сервер. 9. В частности, сервер баз данных должен быть зарезервирован посредством master-master репликации, запросы обрабатываться обоими серверами. 10. В случае падения одного из db-серверов, сервера приложений направляют запросы только к работающему серверу. 11. В случае падения одного из и slave-, или master- серверов площадка должна оставаться доступной. 12. Обязательное использование аппаратного RAID-контроллера модели не ниже Adaptec RAID 5405 (или эквивалент). 13. Серверы, кроме FTP-сервера, должны быть мощностью не ниже DEPO Computers 2200Q1и соответствовать следующим требованиям: — Требование к процессорам: не ниже Dual Intel Xeon QuadCore 2.0Ghz. — Требование к памяти: не менее 4Gb DDRII. — Требование к дискам: SCSI или SAS диски. — FTP-сервер с процессором не ниже Pentium 4. — Вся нагрузка между серверами должна балансироваться. — Максимальное время восстановление работы площадки в случае падения master-сервера – 3 минуты. — На каждом сервере должны быть установлены nginx, Apache, MySQL, PHP. — Настройка на каждом сервере RAID10. 14. Необходимо, чтобы исполнитель настроил репликацию всех серверов между собой. 15. Необходимо, чтобы исполнитель настроил резервное копирование на собственную технологическую площадку и на технологическую площадку МЧС России. 16. Исполнитель обязан осуществлять администрирование и поддержку всей технологической площадки. 17. Гарантированная скорость доступа в сеть Интернет – не менее 100 Mbps. 18. Необходимо резервирование каналов путем прямого подключения не менее чем к 5 магистральным российским и международным операторам. 19. Необходимо наличие на FTP-сервере панели управления ISPmanager с возможностью создавать пользователей, менять их права и лимиты. 20. Исполнитель должен предоставлять дисковое пространство необходимое для функционирования всех интернет- ресурсов МЧС России с учетом их заполняемости. 21. В рамках технической поддержки на интернет-сервере должно быть обеспечено: — Устранение внештатных ситуаций для обеспечения бесперебойной работы площадки, доступности площадка для пользователей и администраторов в течение всего срока действия контракта; — Модернизация платформы площадки (установка и настройка обновлений); — Контроль работоспособности системы и восстановление системы после сбоев; — Конфиденциальность и целостность информации и данных; — Удобство администрирования и технического взаимодействия. 22. Исполнитель должен перенести на сервера Дата-центра интернет – портал МЧС Рос-сии (96 сайтов), без нарушения работы Интернет – портала МЧС России, в течении 7 календарных дней с момента заключения контракта. 25. Суммарная длительность перерывов в работе Интернет-портала МЧС России не должна превышать 4 часов в месяц. 26. Исполнитель должен обеспечить бесперебойную работу сайтов и приемлемое быстродействие. Исполнитель гарантирует Заказчику отказоустойчивость площадки, представленной для информационных ресурсов МЧС России. Приемлемым быстродействием считается такое время загрузки страниц сайта, которое превышает время загрузки соответствующих страниц не более чем в два раза в случае, когда нагрузка на сервер минимальна. Исполнитель осуществляет мониторинг доступности и быстродействия сайтов. В случае сбоев в работе и ухудшения параметров быстродействия Исполнитель уведомляет Заказчика по электронной почте и телефону, принимает меры для восстановления нормальной работы сайтов. Вопрос к хостерам — это реальная цена или завышенная?'}
    ]
    500.times do |i|
      title_words = []
      (rand(20)+1).times { title_words << test_data_pattern.sample[:title].split(' ').sample }
      @title     = title_words.join(' ')
      text_words = []
      (rand(1000)+1).times { text_words << test_data_pattern.sample[:text].split(' ').sample }
      @text = text_words.join(' ')
      puts "migrating. iteration #{i} "
      Article.create(:title => @title, :text => @text)
      @title = ''
      @text  = ''
    end
  end

  def self.down
    Article.destroy_all
  end
end
